package utils

import (
	"context"
	"log"
	"time"

	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
)

func DropTTLIndex(collection *mongo.Collection) {
	ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)
	defer cancel()

	_, err := collection.Indexes().DropOne(ctx, "createdAt_1")
	if err != nil {
		log.Println("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö TTL index ‡πÄ‡∏î‡∏¥‡∏°:", err)
	} else {
		log.Println("üóëÔ∏è TTL Index ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß")
	}
}

func CreateTTLIndex(collection *mongo.Collection, ttlSeconds int32) {
	indexModel := mongo.IndexModel{
		Keys: bson.M{"createdAt": 1},
		Options: options.Index().
			SetExpireAfterSeconds(ttlSeconds),
	}

	ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)
	defer cancel()

	_, err := collection.Indexes().CreateOne(ctx, indexModel)
	if err != nil {
		log.Fatal("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á TTL index:", err)
	} else {
		log.Printf("‚úÖ TTL index ‡πÉ‡∏´‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á (expire ‡∏´‡∏•‡∏±‡∏á %d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)\n", ttlSeconds)
	}
}